"use strict";(self.webpackChunkhomepage=self.webpackChunkhomepage||[]).push([[7242],{1638:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>t,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"api/loaders","title":"Loaders","description":"Unlike the old SWM API, the new API does not manage the loaders for you. You have to create and manage them yourself.","source":"@site/asp_versioned_docs/version-3.0.0/api/loaders.md","sourceDirName":"api","slug":"/api/loaders","permalink":"/docs/asp/3.0.0/api/loaders","draft":false,"unlisted":false,"editUrl":"https://github.com/InfernalSuite/homepage/tree/main/asp_versioned_docs/version-3.0.0/api/loaders.md","tags":[],"version":"3.0.0","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Using the API","permalink":"/docs/asp/3.0.0/api/using"},"next":{"title":"Properties","permalink":"/docs/asp/3.0.0/api/properties"}}');var a=r(4848),i=r(8453);const s={sidebar_position:2},t="Loaders",d={},l=[{value:"Obtaining the reference loaders",id:"obtaining-the-reference-loaders",level:2},{value:"Maven",id:"maven",level:3},{value:"Gradle",id:"gradle",level:3},{value:"Using the reference loaders",id:"using-the-reference-loaders",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"loaders",children:"Loaders"})}),"\n",(0,a.jsxs)(n.p,{children:["Unlike the old SWM API, ",(0,a.jsx)(n.strong,{children:"the new API does not manage the loaders for you"}),". You have to create and manage them yourself.\nThis allows you to have more control over the loaders and how they work.\nYou can either create your own loader by implementing the ",(0,a.jsx)(n.code,{children:"SlimeLoader"})," interface or use the reference ones provided by us.\nThis page will focus on the latter option."]}),"\n",(0,a.jsx)(n.h2,{id:"obtaining-the-reference-loaders",children:"Obtaining the reference loaders"}),"\n",(0,a.jsx)(n.p,{children:"You need to shade the loaders into your plugin. You can do this by adding the following Maven or Gradle dependencies:"}),"\n",(0,a.jsx)(n.h3,{id:"maven",children:"Maven"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-xml",children:"<dependencies>\n  <dependency>\n    <groupId>com.infernalsuite.aswm</groupId>\n    <artifactId>loaders</artifactId>\n    <version>3.0.0-SNAPSHOT</version>\n  </dependency>\n</dependencies>\n"})}),"\n",(0,a.jsx)(n.h3,{id:"gradle",children:"Gradle"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-groovy",children:"dependencies {\n    implementation 'com.infernalsuite.aswm:loaders:3.0.0-SNAPSHOT'\n}\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Don't forget that the reference loaders are not included with the server; ",(0,a.jsx)(n.strong,{children:"you have to shade them into your plugin"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"using-the-reference-loaders",children:"Using the reference loaders"}),"\n",(0,a.jsxs)(n.p,{children:["I personally recommend instantiating the loader in your plugin's ",(0,a.jsx)(n.code,{children:"onEnable"})," method and storing it in a field.\nThis way, you can access the loader from anywhere in your plugin.\nFor example:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'public class MyPlugin extends JavaPlugin {\n    private SlimeLoader loader;\n    private final AdvancedSlimePaperAPI asp = AdvancedSlimePaperAPI.instance();\n\n    @Override\n    public void onEnable() {\n        loader = new FileLoader("slime_worlds");\n    }\n    \n    public void doSomething() {\n        SlimeWorld world = asp.readWorld(loader, "world", false, new SlimePropertyMap());\n        \n        // Do stuff with the world\n    }\n}\n'})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>t});var o=r(6540);const a={},i=o.createContext(a);function s(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);