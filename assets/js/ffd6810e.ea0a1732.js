"use strict";(self.webpackChunkhomepage=self.webpackChunkhomepage||[]).push([[945],{1568:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>p,contentTitle:()=>n,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"api/properties","title":"Properties","description":"The properties are a way to customize the behavior of your world when loaded.","source":"@site/docs_asp/api/properties.md","sourceDirName":"api","slug":"/api/properties","permalink":"/docs/asp/api/properties","draft":false,"unlisted":false,"editUrl":"https://github.com/InfernalSuite/homepage/tree/main/docs_asp/api/properties.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Loaders","permalink":"/docs/asp/api/loaders"},"next":{"title":"Loading Worlds","permalink":"/docs/asp/api/loading_worlds"}}');var s=t(4848),a=t(8453);const i={sidebar_position:4},n="Properties",p={},l=[];function d(e){const r={a:"a",br:"br",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"properties",children:"Properties"})}),"\n",(0,s.jsxs)(r.p,{children:["The properties are a way to customize the behavior of your world when loaded.\nTo use them, you need to create an instance of ",(0,s.jsx)(r.code,{children:"SlimePropertyMap"})," and add the properties you want to apply to the world.",(0,s.jsx)(r.br,{}),"\n","See the example below:"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-java",children:'// create a new and empty property map\nSlimePropertyMap properties = new SlimePropertyMap();\n\nproperties.setValue(SlimeProperties.DIFFICULTY, "normal");\nproperties.setValue(SlimeProperties.SPAWN_X, 123);\nproperties.setValue(SlimeProperties.SPAWN_Y, 112);\nproperties.setValue(SlimeProperties.SPAWN_Z, 170);\nproperties.setValue(SlimeProperties.ALLOW_ANIMALS, false);\nproperties.setValue(SlimeProperties.ALLOW_MONSTERS, false);\nproperties.setValue(SlimeProperties.DRAGON_BATTLE, false);\nproperties.setValue(SlimeProperties.PVP, false);\nproperties.setValue(SlimeProperties.ENVIRONMENT, "normal");\nproperties.setValue(SlimeProperties.WORLD_TYPE, "DEFAULT");\nproperties.setValue(SlimeProperties.DEFAULT_BIOME, "minecraft:plains");\n// add as many as you would like\n'})}),"\n",(0,s.jsxs)(r.p,{children:["After you have created the property map, don't forget to pass it to the ",(0,s.jsx)(r.code,{children:"readWorld"})," method when loading the world.",(0,s.jsx)(r.br,{}),"\n","See the ",(0,s.jsx)(r.a,{href:"loading_worlds",children:"Loading Worlds"})," page for more information on how to read and load worlds."]})]})}function c(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,r,t)=>{t.d(r,{R:()=>i,x:()=>n});var o=t(6540);const s={},a=o.createContext(s);function i(e){const r=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function n(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(a.Provider,{value:r},e.children)}}}]);